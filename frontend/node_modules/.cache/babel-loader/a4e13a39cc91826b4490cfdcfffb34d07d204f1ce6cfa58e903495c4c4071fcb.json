{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ducal\\\\OneDrive\\\\Documents\\\\document-verifier\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport abi from \"./abi/DocumentVerifier.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\"; // ƒë·ªãa ch·ªâ deploy local c·ªßa b·∫°n\n\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState(\"\");\n\n  // üîπ K·∫øt n·ªëi MetaMask\n  async function connectWallet() {\n    if (!window.ethereum) return alert(\"‚ö†Ô∏è C√†i MetaMask tr∆∞·ªõc ƒë√£!\");\n    const [addr] = await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    setAccount(addr);\n  }\n\n  // üîπ T·∫°o hash v√† l∆∞u l√™n blockchain\n  async function uploadFile() {\n    if (!file) return alert(\"Ch·ªçn file tr∆∞·ªõc!\");\n\n    // T√≠nh SHA256 hash c·ªßa file\n    const buffer = await file.arrayBuffer();\n    const hash = ethers.sha256(new Uint8Array(buffer));\n    const provider = new ethers.BrowserProvider(window.ethereum);\n    const signer = await provider.getSigner();\n    const contract = new ethers.Contract(CONTRACT_ADDRESS, abi.abi, signer);\n    setStatus(\"‚è≥ ƒêang g·ª≠i giao d·ªãch l∆∞u hash l√™n blockchain...\");\n    const tx = await contract.storeDocument(hash);\n    await tx.wait();\n    setStatus(`‚úÖ L∆∞u th√†nh c√¥ng!\\nHash: ${hash}\\n(Offline demo, kh√¥ng d√πng IPFS)`);\n  }\n\n  // üîπ X√°c minh hash t·ª´ file\n  async function verifyFile() {\n    if (!file) return alert(\"Ch·ªçn file tr∆∞·ªõc!\");\n    const buffer = await file.arrayBuffer();\n    const hash = ethers.sha256(new Uint8Array(buffer));\n    const provider = new ethers.BrowserProvider(window.ethereum);\n    const contract = new ethers.Contract(CONTRACT_ADDRESS, abi.abi, provider);\n    const [exists, issuer, timestamp] = await contract.verifyDocument(hash);\n    if (exists) setStatus(`‚úÖ File c√≥ tr√™n blockchain!\\nIssuer: ${issuer}\\nTh·ªùi gian: ${new Date(timestamp * 1000)}`);else setStatus(\"‚ùå File ch∆∞a ƒë∆∞·ª£c l∆∞u tr√™n blockchain!\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCDC Document Verifier (Offline Demo)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"\\uD83D\\uDD17 K\\u1EBFt n\\u1ED1i MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0110\\u1ECBa ch\\u1EC9 v\\xED: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      children: \"L\\u01B0u Hash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: verifyFile,\n      children: \"X\\xE1c minh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        background: \"#f4f4f4\",\n        padding: 10,\n        marginTop: 20\n      },\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jhX+mw13N3D/03rgk5vt5xE7bNk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ethers","abi","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","App","_s","account","setAccount","file","setFile","status","setStatus","connectWallet","window","ethereum","alert","addr","request","method","uploadFile","buffer","arrayBuffer","hash","sha256","Uint8Array","provider","BrowserProvider","signer","getSigner","contract","Contract","tx","storeDocument","wait","verifyFile","exists","issuer","timestamp","verifyDocument","Date","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","e","target","files","background","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/ducal/OneDrive/Documents/document-verifier/frontend/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport abi from \"./abi/DocumentVerifier.json\";\n\nconst CONTRACT_ADDRESS = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\"; // ƒë·ªãa ch·ªâ deploy local c·ªßa b·∫°n\n\nfunction App() {\n  const [account, setAccount] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState(\"\");\n\n  // üîπ K·∫øt n·ªëi MetaMask\n  async function connectWallet() {\n    if (!window.ethereum) return alert(\"‚ö†Ô∏è C√†i MetaMask tr∆∞·ªõc ƒë√£!\");\n    const [addr] = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n    setAccount(addr);\n  }\n\n  // üîπ T·∫°o hash v√† l∆∞u l√™n blockchain\n  async function uploadFile() {\n    if (!file) return alert(\"Ch·ªçn file tr∆∞·ªõc!\");\n\n    // T√≠nh SHA256 hash c·ªßa file\n    const buffer = await file.arrayBuffer();\n    const hash = ethers.sha256(new Uint8Array(buffer));\n\n    const provider = new ethers.BrowserProvider(window.ethereum);\n    const signer = await provider.getSigner();\n    const contract = new ethers.Contract(CONTRACT_ADDRESS, abi.abi, signer);\n\n    setStatus(\"‚è≥ ƒêang g·ª≠i giao d·ªãch l∆∞u hash l√™n blockchain...\");\n    const tx = await contract.storeDocument(hash);\n    await tx.wait();\n\n    setStatus(`‚úÖ L∆∞u th√†nh c√¥ng!\\nHash: ${hash}\\n(Offline demo, kh√¥ng d√πng IPFS)`);\n  }\n\n  // üîπ X√°c minh hash t·ª´ file\n  async function verifyFile() {\n    if (!file) return alert(\"Ch·ªçn file tr∆∞·ªõc!\");\n    const buffer = await file.arrayBuffer();\n    const hash = ethers.sha256(new Uint8Array(buffer));\n\n    const provider = new ethers.BrowserProvider(window.ethereum);\n    const contract = new ethers.Contract(CONTRACT_ADDRESS, abi.abi, provider);\n\n    const [exists, issuer, timestamp] = await contract.verifyDocument(hash);\n\n    if (exists)\n      setStatus(`‚úÖ File c√≥ tr√™n blockchain!\\nIssuer: ${issuer}\\nTh·ªùi gian: ${new Date(\n        timestamp * 1000\n      )}`);\n    else setStatus(\"‚ùå File ch∆∞a ƒë∆∞·ª£c l∆∞u tr√™n blockchain!\");\n  }\n\n  return (\n    <div style={{ padding: 20, fontFamily: \"Arial\" }}>\n      <h2>üìú Document Verifier (Offline Demo)</h2>\n      <button onClick={connectWallet}>üîó K·∫øt n·ªëi MetaMask</button>\n      <p>ƒê·ªãa ch·ªâ v√≠: {account}</p>\n\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n      <br />\n      <button onClick={uploadFile}>L∆∞u Hash</button>\n      <button onClick={verifyFile}>X√°c minh</button>\n\n      <pre style={{ background: \"#f4f4f4\", padding: 10, marginTop: 20 }}>{status}</pre>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}