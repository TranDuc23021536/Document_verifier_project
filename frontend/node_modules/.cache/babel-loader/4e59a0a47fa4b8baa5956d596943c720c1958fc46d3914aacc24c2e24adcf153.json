{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ducal\\\\OneDrive\\\\Documents\\\\Document_verifier_project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport verifierAbi from \"./abi/DocumentVerifier.json\";\nimport registryAbi from \"./abi/IssuerRegistry.json\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VERIFIER_ADDRESS = \"0xYourDocumentVerifierAddress\"; // cập nhật sau deploy\nconst REGISTRY_ADDRESS = \"0xYourIssuerRegistryAddress\"; // cập nhật sau deploy\n\nexport default function App() {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [issuer, setIssuer] = useState({\n    name: \"\",\n    organization: \"\",\n    email: \"\"\n  });\n  const [issuersList, setIssuersList] = useState([]);\n  const [selectedIssuer, setSelectedIssuer] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [history, setHistory] = useState([]);\n  const getProvider = async () => {\n    const provider = new ethers.BrowserProvider(window.ethereum);\n    provider.getNetwork = async () => ({\n      name: \"hardhat\",\n      chainId: 31337,\n      ensAddress: null\n    });\n    return provider;\n  };\n  const addHistory = action => {\n    const time = new Date().toLocaleString();\n    setHistory(prev => [{\n      action,\n      time\n    }, ...prev]);\n  };\n  async function connectWallet() {\n    if (!window.ethereum) return alert(\"⚠️ Cài MetaMask trước!\");\n    const provider = await getProvider();\n    const [addr] = await provider.send(\"eth_requestAccounts\", []);\n    setAccount(addr);\n  }\n  async function registerIssuer() {\n    try {\n      setLoading(true);\n      const provider = await getProvider();\n      const signer = await provider.getSigner();\n      const registry = new ethers.Contract(REGISTRY_ADDRESS, registryAbi.abi, signer);\n      const tx = await registry.registerIssuer(issuer.name, issuer.organization, issuer.email);\n      setStatus(\"⏳ Đang đăng ký...\");\n      await tx.wait();\n      setStatus(\"✅ Đăng ký Issuer thành công!\");\n      addHistory(`Đăng ký Issuer: ${issuer.name} (${issuer.organization})`);\n      await loadIssuers();\n    } catch (e) {\n      console.error(e);\n      setStatus(\"❌ Lỗi khi đăng ký Issuer.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n  async function loadIssuers() {\n    try {\n      const provider = await getProvider();\n      const registry = new ethers.Contract(REGISTRY_ADDRESS, registryAbi.abi, provider);\n      const issuers = await registry.getAllIssuers();\n      const formatted = issuers.map(i => ({\n        id: i.id.toString(),\n        name: i.name,\n        org: i.organization,\n        email: i.email,\n        owner: i.owner\n      }));\n      setIssuersList(formatted);\n    } catch (e) {\n      console.error(\"Load issuers error:\", e);\n    }\n  }\n  useEffect(() => {\n    loadIssuers();\n  }, []);\n  async function storeHash() {\n    if (!file) return alert(\"Chưa chọn file!\");\n    if (!selectedIssuer) return alert(\"Chưa chọn Issuer!\");\n    try {\n      setLoading(true);\n      const buffer = await file.arrayBuffer();\n      const hash = ethers.sha256(new Uint8Array(buffer));\n      const provider = await getProvider();\n      const signer = await provider.getSigner();\n      const verifier = new ethers.Contract(VERIFIER_ADDRESS, verifierAbi.abi, signer);\n      const tx = await verifier.storeDocument(hash, Number(selectedIssuer));\n      setStatus(\"⏳ Đang lưu hash...\");\n      await tx.wait();\n      setStatus(\"✅ Lưu hash thành công!\");\n      addHistory(`Lưu hash file: ${file.name}`);\n    } catch (e) {\n      console.error(e);\n      setStatus(\"❌ Lỗi khi lưu hash.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n  async function verifyFile() {\n    if (!file) return alert(\"Chưa chọn file!\");\n    try {\n      setLoading(true);\n      const buffer = await file.arrayBuffer();\n      const hash = ethers.sha256(new Uint8Array(buffer));\n      const provider = await getProvider();\n      const verifier = new ethers.Contract(VERIFIER_ADDRESS, verifierAbi.abi, provider);\n      const [exists, id, name, org, email, owner, timestamp] = await verifier.verifyDocument(hash);\n      if (!exists) return setStatus(\"❌ File chưa được lưu trên blockchain.\");\n      const info = `✅ File hợp lệ!\\nIssuer: ${name} (${org})\\nEmail: ${email}\\nOwner: ${owner}\\nTime: ${new Date(Number(timestamp) * 1000).toLocaleString()}`;\n      setStatus(info);\n      addHistory(`Xác minh file: ${file.name} ✅ Hợp lệ`);\n    } catch (e) {\n      console.error(e);\n      setStatus(\"❌ Lỗi khi xác minh file.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83E\\uDDFE Blockchain Document Verifier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      className: \"connect-btn\",\n      children: account ? `✅ ${account.slice(0, 6)}...${account.slice(-4)}` : \"🔗 Kết nối MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFE2 \\u0110\\u0103ng k\\xFD Issuer m\\u1EDBi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"T\\xEAn\",\n        onChange: e => setIssuer({\n          ...issuer,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"T\\u1ED5 ch\\u1EE9c\",\n        onChange: e => setIssuer({\n          ...issuer,\n          organization: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        onChange: e => setIssuer({\n          ...issuer,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: registerIssuer,\n        disabled: loading,\n        children: \"\\uD83D\\uDCDD \\u0110\\u0103ng k\\xFD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCC2 L\\u01B0u / X\\xE1c minh t\\xE0i li\\u1EC7u\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedIssuer(e.target.value),\n        value: selectedIssuer,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Ch\\u1ECDn Issuer --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), issuersList.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i.id,\n          children: [i.name, \" (\", i.org, \")\"]\n        }, i.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: storeHash,\n        disabled: loading,\n        children: \"\\uD83D\\uDCE4 L\\u01B0u Hash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: verifyFile,\n        disabled: loading,\n        children: \"\\uD83D\\uDD0D X\\xE1c minh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"status-box\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCDC L\\u1ECBch s\\u1EED ho\\u1EA1t \\u0111\\u1ED9ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"history-list\",\n        children: history.map((h, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: h.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), \" \\u2014 \", h.action]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hbGjQe6yKmIq7GDgOHWO2BGfGgg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ethers","verifierAbi","registryAbi","jsxDEV","_jsxDEV","VERIFIER_ADDRESS","REGISTRY_ADDRESS","App","_s","account","setAccount","issuer","setIssuer","name","organization","email","issuersList","setIssuersList","selectedIssuer","setSelectedIssuer","file","setFile","status","setStatus","loading","setLoading","history","setHistory","getProvider","provider","BrowserProvider","window","ethereum","getNetwork","chainId","ensAddress","addHistory","action","time","Date","toLocaleString","prev","connectWallet","alert","addr","send","registerIssuer","signer","getSigner","registry","Contract","abi","tx","wait","loadIssuers","e","console","error","issuers","getAllIssuers","formatted","map","i","id","toString","org","owner","storeHash","buffer","arrayBuffer","hash","sha256","Uint8Array","verifier","storeDocument","Number","verifyFile","exists","timestamp","verifyDocument","info","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","slice","placeholder","onChange","target","value","disabled","type","files","h","_c","$RefreshReg$"],"sources":["C:/Users/ducal/OneDrive/Documents/Document_verifier_project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport verifierAbi from \"./abi/DocumentVerifier.json\";\nimport registryAbi from \"./abi/IssuerRegistry.json\";\nimport \"./App.css\";\n\nconst VERIFIER_ADDRESS = \"0xYourDocumentVerifierAddress\"; // cập nhật sau deploy\nconst REGISTRY_ADDRESS = \"0xYourIssuerRegistryAddress\";   // cập nhật sau deploy\n\nexport default function App() {\n  const [account, setAccount] = useState(\"\");\n  const [issuer, setIssuer] = useState({ name: \"\", organization: \"\", email: \"\" });\n  const [issuersList, setIssuersList] = useState([]);\n  const [selectedIssuer, setSelectedIssuer] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [history, setHistory] = useState([]);\n\n  const getProvider = async () => {\n    const provider = new ethers.BrowserProvider(window.ethereum);\n    provider.getNetwork = async () => ({ name: \"hardhat\", chainId: 31337, ensAddress: null });\n    return provider;\n  };\n\n  const addHistory = (action) => {\n    const time = new Date().toLocaleString();\n    setHistory((prev) => [{ action, time }, ...prev]);\n  };\n\n  async function connectWallet() {\n    if (!window.ethereum) return alert(\"⚠️ Cài MetaMask trước!\");\n    const provider = await getProvider();\n    const [addr] = await provider.send(\"eth_requestAccounts\", []);\n    setAccount(addr);\n  }\n\n  async function registerIssuer() {\n    try {\n      setLoading(true);\n      const provider = await getProvider();\n      const signer = await provider.getSigner();\n      const registry = new ethers.Contract(REGISTRY_ADDRESS, registryAbi.abi, signer);\n      const tx = await registry.registerIssuer(issuer.name, issuer.organization, issuer.email);\n      setStatus(\"⏳ Đang đăng ký...\");\n      await tx.wait();\n      setStatus(\"✅ Đăng ký Issuer thành công!\");\n      addHistory(`Đăng ký Issuer: ${issuer.name} (${issuer.organization})`);\n      await loadIssuers();\n    } catch (e) {\n      console.error(e);\n      setStatus(\"❌ Lỗi khi đăng ký Issuer.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function loadIssuers() {\n    try {\n      const provider = await getProvider();\n      const registry = new ethers.Contract(REGISTRY_ADDRESS, registryAbi.abi, provider);\n      const issuers = await registry.getAllIssuers();\n\n      const formatted = issuers.map((i) => ({\n        id: i.id.toString(),\n        name: i.name,\n        org: i.organization,\n        email: i.email,\n        owner: i.owner,\n      }));\n\n      setIssuersList(formatted);\n    } catch (e) {\n      console.error(\"Load issuers error:\", e);\n    }\n  }\n\n  useEffect(() => {\n    loadIssuers();\n  }, []);\n\n  async function storeHash() {\n    if (!file) return alert(\"Chưa chọn file!\");\n    if (!selectedIssuer) return alert(\"Chưa chọn Issuer!\");\n    try {\n      setLoading(true);\n      const buffer = await file.arrayBuffer();\n      const hash = ethers.sha256(new Uint8Array(buffer));\n\n      const provider = await getProvider();\n      const signer = await provider.getSigner();\n      const verifier = new ethers.Contract(VERIFIER_ADDRESS, verifierAbi.abi, signer);\n\n      const tx = await verifier.storeDocument(hash, Number(selectedIssuer));\n      setStatus(\"⏳ Đang lưu hash...\");\n      await tx.wait();\n      setStatus(\"✅ Lưu hash thành công!\");\n      addHistory(`Lưu hash file: ${file.name}`);\n    } catch (e) {\n      console.error(e);\n      setStatus(\"❌ Lỗi khi lưu hash.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function verifyFile() {\n    if (!file) return alert(\"Chưa chọn file!\");\n    try {\n      setLoading(true);\n      const buffer = await file.arrayBuffer();\n      const hash = ethers.sha256(new Uint8Array(buffer));\n      const provider = await getProvider();\n      const verifier = new ethers.Contract(VERIFIER_ADDRESS, verifierAbi.abi, provider);\n\n      const [exists, id, name, org, email, owner, timestamp] = await verifier.verifyDocument(hash);\n      if (!exists) return setStatus(\"❌ File chưa được lưu trên blockchain.\");\n\n      const info = `✅ File hợp lệ!\\nIssuer: ${name} (${org})\\nEmail: ${email}\\nOwner: ${owner}\\nTime: ${new Date(\n        Number(timestamp) * 1000\n      ).toLocaleString()}`;\n      setStatus(info);\n      addHistory(`Xác minh file: ${file.name} ✅ Hợp lệ`);\n    } catch (e) {\n      console.error(e);\n      setStatus(\"❌ Lỗi khi xác minh file.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>🧾 Blockchain Document Verifier</h1>\n      <button onClick={connectWallet} className=\"connect-btn\">\n        {account ? `✅ ${account.slice(0, 6)}...${account.slice(-4)}` : \"🔗 Kết nối MetaMask\"}\n      </button>\n\n      <section>\n        <h2>🏢 Đăng ký Issuer mới</h2>\n        <input placeholder=\"Tên\" onChange={(e) => setIssuer({ ...issuer, name: e.target.value })} />\n        <input placeholder=\"Tổ chức\" onChange={(e) => setIssuer({ ...issuer, organization: e.target.value })} />\n        <input placeholder=\"Email\" onChange={(e) => setIssuer({ ...issuer, email: e.target.value })} />\n        <button onClick={registerIssuer} disabled={loading}>📝 Đăng ký</button>\n      </section>\n\n      <section>\n        <h2>📂 Lưu / Xác minh tài liệu</h2>\n        <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n        <select onChange={(e) => setSelectedIssuer(e.target.value)} value={selectedIssuer}>\n          <option value=\"\">-- Chọn Issuer --</option>\n          {issuersList.map((i) => (\n            <option key={i.id} value={i.id}>\n              {i.name} ({i.org})\n            </option>\n          ))}\n        </select>\n        <button onClick={storeHash} disabled={loading}>📤 Lưu Hash</button>\n        <button onClick={verifyFile} disabled={loading}>🔍 Xác minh</button>\n      </section>\n\n      <pre className=\"status-box\">{status}</pre>\n\n      <section>\n        <h2>📜 Lịch sử hoạt động</h2>\n        <ul className=\"history-list\">\n          {history.map((h, i) => (\n            <li key={i}><b>{h.time}</b> — {h.action}</li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}