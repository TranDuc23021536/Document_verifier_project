{"ast":null,"code":"import { ValidationError } from \"./errors.js\";\nexport function integer(value) {\n  const int = parseInt(value);\n  if (int.toString() !== value) {\n    throw new ValidationError('Value must be an integer');\n  }\n}\nexport function positive(value) {\n  if (value < 0) {\n    throw new ValidationError('Value must be a positive integer, or zero');\n  }\n}\nexport function maxValue(max) {\n  return value => {\n    if (value > max) {\n      throw new ValidationError(`Value must be smaller than or equal to ${max}`);\n    }\n  };\n}\nexport function validate(...funcs) {\n  return value => {\n    for (const fn of funcs) {\n      fn(value);\n    }\n  };\n}\nexport const validatePort = validate(integer, positive, maxValue(65_535));","map":{"version":3,"names":["ValidationError","integer","value","int","parseInt","toString","positive","maxValue","max","validate","funcs","fn","validatePort"],"sources":["C:\\Users\\ducal\\OneDrive\\Documents\\document-verifier\\frontend\\node_modules\\@multiformats\\multiaddr-to-uri\\node_modules\\@multiformats\\multiaddr\\src\\validation.ts"],"sourcesContent":["import { ValidationError } from './errors.ts'\n\nexport function integer (value: string): void {\n  const int = parseInt(value)\n\n  if (int.toString() !== value) {\n    throw new ValidationError('Value must be an integer')\n  }\n}\n\nexport function positive (value: any): void {\n  if (value < 0) {\n    throw new ValidationError('Value must be a positive integer, or zero')\n  }\n}\n\nexport function maxValue (max: number): (value: any) => void {\n  return (value) => {\n    if (value > max) {\n      throw new ValidationError(`Value must be smaller than or equal to ${max}`)\n    }\n  }\n}\n\nexport function validate (...funcs: Array<(value: string) => void>): (value: string) => void {\n  return (value) => {\n    for (const fn of funcs) {\n      fn(value)\n    }\n  }\n}\n\nexport const validatePort = validate(\n  integer,\n  positive,\n  maxValue(65_535)\n)\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,aAAa;AAE7C,OAAM,SAAUC,OAAOA,CAAEC,KAAa;EACpC,MAAMC,GAAG,GAAGC,QAAQ,CAACF,KAAK,CAAC;EAE3B,IAAIC,GAAG,CAACE,QAAQ,EAAE,KAAKH,KAAK,EAAE;IAC5B,MAAM,IAAIF,eAAe,CAAC,0BAA0B,CAAC;EACvD;AACF;AAEA,OAAM,SAAUM,QAAQA,CAAEJ,KAAU;EAClC,IAAIA,KAAK,GAAG,CAAC,EAAE;IACb,MAAM,IAAIF,eAAe,CAAC,2CAA2C,CAAC;EACxE;AACF;AAEA,OAAM,SAAUO,QAAQA,CAAEC,GAAW;EACnC,OAAQN,KAAK,IAAI;IACf,IAAIA,KAAK,GAAGM,GAAG,EAAE;MACf,MAAM,IAAIR,eAAe,CAAC,0CAA0CQ,GAAG,EAAE,CAAC;IAC5E;EACF,CAAC;AACH;AAEA,OAAM,SAAUC,QAAQA,CAAE,GAAGC,KAAqC;EAChE,OAAQR,KAAK,IAAI;IACf,KAAK,MAAMS,EAAE,IAAID,KAAK,EAAE;MACtBC,EAAE,CAACT,KAAK,CAAC;IACX;EACF,CAAC;AACH;AAEA,OAAO,MAAMU,YAAY,GAAGH,QAAQ,CAClCR,OAAO,EACPK,QAAQ,EACRC,QAAQ,CAAC,MAAM,CAAC,CACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}